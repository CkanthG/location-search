apiVersion: apps/v1
kind: Deployment
metadata:
  name: location-search
  labels:
    app: location-search
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: 2
  selector:
    matchLabels:
      app: location-search
  progressDeadlineSeconds: 300
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: location-search
    spec:
      containers:
        - name: location-search
          image: docker.io/sreekanthgaddoju/location-search:latest
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - name: web
              containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 4G
            requests:
              cpu: 500m
              memory: 2G
          volumeMounts:
            - name: location-search-persistent-storage
              mountPath: /var/lib/location-search
      volumes:
        - name: location-search-persistent-storage
          persistentVolumeClaim:
            claimName: location-search-pv-claim
---

kind: Service
apiVersion: v1
metadata:
  name: location-search
  labels:
    app: location-search
spec:
  selector:
    app: location-search
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: location-search
  labels:
    app: location-search
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "200m"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
    - host: store
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: location-search
                port:
                  number: 80
  tls:
    - hosts:
        - store
      secretName: location-search-cert